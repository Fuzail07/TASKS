#!/bin/bash

# Configuration file for custom security checks
CUSTOM_CHECKS_FILE="custom_security_checks.conf"

# Function to perform user and group audits
perform_user_group_audit() {
  echo "Performing user and group audits..."
  echo "List of all users and groups:"
  getent passwd
  getent group

  echo "Users with UID 0 (root privileges):"
  getent passwd | awk -F: '$3 == 0 {print $1}'

  echo "Users without passwords or with weak passwords:"
  for user in $(getent passwd | cut -d: -f1); do
    if [ "$(passwd -S $user | awk '{print $2}')" = "NP" ]; then
      echo "  $user: No password set"
    elif [ "$(passwd -S $user | awk '{print $2}')" = "PS" ]; then
      echo "  $user: Weak password set"
    fi
  done
}

# Function to perform file and directory permission audits
perform_file_directory_audit() {
  echo "Performing file and directory permission audits..."
  echo "Files and directories with world-writable permissions:"
  find / -xdev -type f -perm -0002 -exec ls -ld {} \;
  find / -xdev -type d -perm -0002 -exec ls -ld {} \;

  echo "SSH directory permissions:"
  for dir in /etc/ssh /home/*/.ssh; do
    if [ -d "$dir" ]; then
      echo "  $dir: $(stat -c %a $dir)"
    fi
  done

  echo "Files with SUID or SGID bits set:"
  find / -xdev -type f \( -perm -4000 -o -perm -2000 \) -exec ls -ld {} \;
}

# Function to perform service audits
perform_service_audit() {
  echo "Performing service audits..."
  echo "List of all running services:"
  systemctl list-units --type=service --state=running

  echo "Critical services (e.g., sshd, iptables) status:"
  for service in sshd iptables; do
    if systemctl is-active --quiet "$service"; then
      echo "  $service is running."
    else
      echo "  $service is not running."
    fi
  done

  echo "Services listening on non-standard or insecure ports:"
  netstat -tuln | grep -v "127.0.0.1"
}

# Function to perform firewall and network security audits
perform_firewall_network_audit() {
  echo "Performing firewall and network security audits..."
  echo "Firewall status:"
  if command -v ufw &> /dev/null; then
    ufw status
  else
    echo "UFW is not installed."
  fi

  echo "Open ports and their associated services:"
  netstat -tuln

  echo "IP forwarding and other insecure network configurations:"
  sysctl net.ipv4.ip_forward
}

# Function to perform IP and network configuration checks
perform_ip_network_config_check() {
  echo "Performing IP and network configuration checks..."
  echo "Public vs. private IP addresses:"
  for ip in $(hostname -I); do
    if [[ "$ip" =~ ^10\.|^172\.(1[6-9]|2[0-9]|3[01])\.|^192\.168\. ]]; then
      echo "  $ip: Private IP"
    else
      echo "  $ip: Public IP"
    fi
  done
}

# Function to perform security updates and patching checks
perform_security_updates_check() {
  echo "Performing security updates and patching checks..."
  echo "Updating package lists..."
  apt-get update -qq

  echo "Available security updates or patches:"
  apt-get upgrade -s | grep -i security

  echo "Server configuration for receiving and installing security updates:"
  if [ -f /etc/apt/apt.conf.d/50unattended-upgrades ]; then
    cat /etc/apt/apt.conf.d/50unattended-upgrades
  else
    echo "Unattended-upgrades is not configured."
  fi
}

# Function to perform log monitoring checks
perform_log_monitoring_check() {
  echo "Performing log monitoring checks..."
  echo "Recent suspicious log entries:"
  grep -i "failed" /var/log/auth.log | grep -i "ssh"
}

# Function to perform SSH configuration hardening
perform_ssh_hardening() {
  echo "Performing SSH configuration hardening..."
  echo "Implementing SSH key-based authentication and disabling password-based login for root..."
  sed -i 's/^#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
  sed -i 's/^PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config
  systemctl restart sshd

  echo "Ensuring SSH keys are securely stored and used..."
  chmod 600 /etc/ssh/ssh_host_rsa_key
  chmod 600 /etc/ssh/ssh_host_ecdsa_key
}

# Function to disable IPv6 (if not required)
perform_ipv6_disabling() {
  echo "Disabling IPv6 (if not required)..."
  echo "net.ipv6.conf.all.disable_ipv6 = 1" >> /etc/sysctl.conf
  echo "net.ipv6.conf.default.disable_ipv6 = 1" >> /etc/sysctl.conf
  sysctl -p

  echo "Updating services like SafeSquid to listen on the correct IPv4 addresses..."
  sed -i 's/^http_port [::1]/http_port 127.0.0.1/' /etc/squid/squid.conf
  systemctl restart squid
}

# Main function
main() {
  perform_user_group_audit
  perform_file_directory_audit
  perform_service_audit
  perform_firewall_network_audit
  perform_ip_network_config_check
  perform_security_updates_check
  perform_log_monitoring_check
  perform_ssh_hardening
  perform_ipv6_disabling
}


main
